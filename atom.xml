<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gitming的个人博客</title>
  
  <subtitle>专注JavaWeb开发技术</subtitle>
  <link href="http://www.zhangjm.top/atom.xml" rel="self"/>
  
  <link href="http://www.zhangjm.top/"/>
  <updated>2022-04-02T07:05:49.760Z</updated>
  <id>http://www.zhangjm.top/</id>
  
  <author>
    <name>Gitming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos7基于Hexo、GitHub搭建个人博客教程</title>
    <link href="http://www.zhangjm.top/2022/04/02/Centos7%E5%9F%BA%E4%BA%8EHexo%E3%80%81GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>http://www.zhangjm.top/2022/04/02/Centos7%E5%9F%BA%E4%BA%8EHexo%E3%80%81GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</id>
    <published>2022-04-02T06:46:03.000Z</published>
    <updated>2022-04-02T07:05:49.760Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p><a href="https://hexo.io/zh-cn/">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选。</p><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库并部署Hexo到GitHub</li><li>设置个人域名</li><li>发布文章</li><li>Hexo的基本设置</li><li>设置Hexo主题</li><li>多终端发布博客</li></ol><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>这里使用压缩包的方式进行安装，尽管一键 <code>yum install -y</code> 更加简单粗暴，但是这样会把文件打散，使用压缩包的方式安装还能顺便学习许多命令和配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装依赖库和编译工具</span></span></span><br><span class="line">yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 下载 git 最新版本（`tmp` 目录用来存放临时文件，服务器重启后会自动清除）</span></span></span><br><span class="line">cd /tmp &amp;&amp; wget https://www.kernel.org/pub/software/scm/git/git-2.35.0.tar.gz   </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 解压</span></span></span><br><span class="line">tar -zvxf git-2.35.0.tar.gz   </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 编译</span></span></span><br><span class="line">cd git-2.35.0 &amp;&amp; make all prefix=/usr/local/git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装</span></span></span><br><span class="line">make install prefix=/usr/local/git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置环境变量</span></span></span><br><span class="line">echo &#x27;export PATH=$PATH:/usr/local/git/bin&#x27; &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 使环境变量配置生效</span></span></span><br><span class="line">source /etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看版本</span></span></span><br><span class="line">git version</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置用户名和邮箱</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># git config --global user.email &quot;xxx@outlook.com&quot;</span></span></span><br><span class="line">git config --global user.name &quot;你的账号&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看配置信息</span></span></span><br><span class="line">git config -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 生成 ssh 密钥</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># ssh-keygen -t rsa -C &quot;xxx@outlook.com&quot; 后回车三次</span></span></span><br><span class="line">ssh-keygen -t rsa -C &quot;你的 github 邮箱&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 打开 `/root/.ssh/id_rsa.pub` ，将其中内容添加到 GitHub 的 SSH Key</span></span></span><br><span class="line">cat /root/.ssh//id_rsa.pub</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 尝试使用 ssh clone 你的仓库</span></span></span><br><span class="line">git clone git@github.com:xxx/xx.git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 如果 clone 成功则说明 ssh 设置成功</span></span></span><br></pre></td></tr></table></figure><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><h4 id="一、-安装"><a href="#一、-安装" class="headerlink" title="一、 安装"></a>一、 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建下载目录</span></span></span><br><span class="line">mkdir mydir</span><br><span class="line">cd mydir</span><br><span class="line">mkdir download</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 进入目录（用户下载nodejs包）用命令下载相关版本nodejs包（nodejs官网https://nodejs.org/en/download/）</span></span></span><br><span class="line">cd /mydir/download/ &amp;&amp; wget https://nodejs.org/dist/v16.14.2/node-v16.14.2-linux-x64.tar.xz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 解压这个刚下好的安装包和重命名</span></span></span><br><span class="line">tar xvf node-v16.14.2-linux-x64.tar.xz</span><br><span class="line">mv node-v14.17.6-linux-x64 nodejs</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建软连接以便全局可用</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># ps: 否则node -v 报错：-bash: /usr/bin/node: 没有那个文件或目录</span></span></span><br><span class="line">ln -s /mydir/download/nodejs/bin/node /usr/bin/node</span><br><span class="line">ln -s /mydir/download/nodejs/bin/npm /usr/bin/npm</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 检验一下看是否安装成功，出现版本号则说明安装成功</span></span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置nodejs国内镜像 如果返回 https://registry.npm.taobao.org/ ，说明镜像配置成功</span></span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">npm config get registry</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 也可以使用cnpm，之后就可以使用cnpm了：（安装xxx） cnpm install xxx</span></span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="二、卸载"><a href="#二、卸载" class="headerlink" title="二、卸载"></a>二、卸载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 先卸载npm 如果命令不能执行，则切换到管理员状态再尝试，同下</span></span></span><br><span class="line">npm uninstall npm -g</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 卸载node</span></span></span><br><span class="line">yum remove nodejs npm -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 检查是否有残留文件</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 进入 /usr/local/lib 删除所有 node 和 node_modules文件夹</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 进入 /usr/local/include 删除所有 node 和 node_modules 文件夹</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 进入 /usr/local/bin 删除 node 的可执行文件</span></span></span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置 npm 源为淘宝源</span></span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装 hexo</span></span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 先把hexo命令添加到全局：hexo在nodejs的`lib/node_modules/hexo-cli/bin` 可以找到hexo命令(nodejs 我安装在`/mydir/download`下)</span></span></span><br><span class="line">ln -s /mydir/download/nodejs/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看版本</span></span></span><br><span class="line">hexo -v</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 这里将博客放在 `/data/blog` 目录下</span></span> </span><br><span class="line">mkdir -p /data/blog &amp;&amp; cd /data/blog</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 初始化 hexo</span></span></span><br><span class="line">hexo init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 生成 hexo 页面</span></span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>目录下会生成文件文件：</p><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面<ul><li><code>index.html</code>：博客的主页面</li></ul></li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题</li><li><code>** _config.yml</code>: 博客的配置文件**</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 打开hexo的服务</span></span></span><br><span class="line">hexo server</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 控制台打印内容</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># INFO  Validating config</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># INFO  Start processing</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span></span></span><br></pre></td></tr></table></figure><p>在浏览器输入ip:4000就可以看到你生成的博客了,访问提示“该网页无法正常运作”时，可能为没加入安全组</p><p>使用ctrl+c可以把服务关掉</p><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><h4 id="创建GitHub账户以及仓库"><a href="#创建GitHub账户以及仓库" class="headerlink" title="创建GitHub账户以及仓库"></a>创建GitHub账户以及仓库</h4><p>首先，你先要有一个GitHub账户，注册完登录后，在GitHub.com中看到一个New repository，点击新建仓库，创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名，点击create repository</p><h4 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h4><p>上面Git安裝有相同操作可不做</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱</span></span></span><br><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 检查是否输入错误</span></span></span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 然后创建SSH,一路回车</span></span></span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 最后会生成.ssh的文件夹。文件夹地址： ‘/root/.ssh/id_rsa.pub’</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># id_rsa是你这台电脑的私人秘钥，id_rsa.pub是公共秘钥。把这个公钥放在GitHub上，用于匹配</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看是否成功</span></span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h4 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h4><p>将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>翻到最后，修改为YourgithubName就是你的GitHub账户</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># hexo clean清除了你之前生成的东西，也可以不加</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># hexo generate 生成静态文章，可以用 hexo g缩写</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># hexo deploy 部署文章，可以用hexo d缩写</span></span></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 可能会弹出，填写Github账号以及密码（使用令牌）</span></span></span><br></pre></td></tr></table></figure><p>从2021年8月14日之后，使用git对github进行身份验证操作的时候不再接受使用账号密码形式clone和push代码，之前使用账号密码形式的可以改为使用acces_token形式上传（具体博客：<a href="https://link.juejin.cn/?target=https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/">github.blog&#x2F;2020-12-15-…</a>）。</p><p>以下使用者不受此更改的影响：</p><ul><li><p>如果您为您的帐户启用了<a href="https://link.juejin.cn/?target=https://help.github.com/en/github/authenticating-to-github/securing-your-account-with-two-factor-authentication-2fa">双因素身份验证</a>，则您已经需要使用基于令牌或基于 SSH 的身份验证。</p></li><li><p>如果您使用 GitHub Enterprise Server，我们尚未宣布对我们的本地产品进行任何更改。</p></li><li><p>如果您维护一个<a href="https://link.juejin.cn/?target=https://docs.github.com/en/developers/apps/about-apps%23about-github-apps">GitHub App</a>，GitHub Apps 不支持密码认证。</p></li></ul><h4 id="Github令牌代替密码"><a href="#Github令牌代替密码" class="headerlink" title="Github令牌代替密码"></a>Github令牌代替密码</h4><p>Github头像 -&gt; Settings -&gt; Developer settings -&gt; Personal access tokens -&gt; Generate new token</p><p>点击Generate token后，会显示生成的一段代替密码的序列号，一键复制之后将它存在方便找到的地方，因为下一次使用令牌时这里的序列号将被隐藏。</p><p>输入后，可进入自己的GItHub仓库,<code>https://github.com/YourgithubName/YourgithubName.github.io.git</code></p><p>然后 Settings -&gt; Github Pages ,点击 Check it out here</p><p> 出现 <code>Your site is published at https://YourgithubName.github.io/</code> 便是你的博客链接啦</p><h3 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h3><p>现在你的个人网站的地址是 yourname.github.io，如果觉得这个网址不太够个性化，这就需要你设置个人域名了。</p><h4 id="首先你拥有一个域名"><a href="#首先你拥有一个域名" class="headerlink" title="首先你拥有一个域名"></a>首先你拥有一个域名</h4><h4 id="设置域名解析"><a href="#设置域名解析" class="headerlink" title="设置域名解析"></a>设置域名解析</h4><p>阿里云后台-&gt;侧边栏选择域名服务-&gt;点击域名-&gt;选择域名解析，进入到该域名的域名解析设置页</p><p>先用<code>ping yourusername.github.io</code>查询你的guihub主页对应的ip地址</p><p>然后在域名解析设置里添加两条记录：</p><ul><li>CNAME记录的记录值设置成域名，也就是你的github主页<code>yourname.github.io</code></li><li>A记录的记录值设置成IP地址，也就是我们刚才ping查询出来的IP地址</li></ul><p><strong>注意，解析线路选择默认</strong>，不要选境外。境外可做国内外分流用,。此处选择<strong>默认</strong>！！</p><h4 id="设置GItHub域名"><a href="#设置GItHub域名" class="headerlink" title="设置GItHub域名"></a>设置GItHub域名</h4><p>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名<code>xx.xxx</code></p><h4 id="博客添加"><a href="#博客添加" class="headerlink" title="博客添加"></a>博客添加</h4><p>然后在你的博客文件<code>source</code> (我的在<code>/data/blog/source</code>) 中创建一个名为<code>CNAME</code>文件，不要后缀。写上你的域名</p><p>PS : 还有很多其他的文件如果想编译后放在public文件夹下，都可以先放source文件夹下，在hexo g编译后就会复制到public文件夹下</p><h4 id="重新构建Hexo"><a href="#重新构建Hexo" class="headerlink" title="重新构建Hexo"></a>重新构建Hexo</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>接下来你就可以正式开始写文章了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 发布一个名为newpapername的文章</span></span></span><br><span class="line">hexo new newpapername</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再执行下面命令就可以看到更新了</span></span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="Hexo的基本设置"><a href="#Hexo的基本设置" class="headerlink" title="Hexo的基本设置"></a>Hexo的基本设置</h3><p>在文件根目录下的<code>_config.yml</code>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>title</code></td><td align="center">网站标题</td></tr><tr><td align="center"><code>subtitle</code></td><td align="center">网站副标题</td></tr><tr><td align="center"><code>description</code></td><td align="center">网站描述</td></tr><tr><td align="center"><code>keywords</code></td><td align="center">网站的关键词。支持多个关键词</td></tr><tr><td align="center"><code>author</code></td><td align="center">您的名字</td></tr><tr><td align="center"><code>language</code></td><td align="center">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code></td></tr><tr><td align="center"><code>timezone</code></td><td align="center">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code></td></tr></tbody></table><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center"><code>url</code></td><td align="center">网址, 必须以 <code>http://</code> 或 <code>https://</code> 开头</td><td align="center"></td></tr><tr><td align="center"><code>root</code></td><td align="center">网站根目录</td><td align="center">url’s pathname</td></tr><tr><td align="center"><code>permalink</code></td><td align="center">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</td><td align="center">:year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</td></tr><tr><td align="center"><code>permalink_defaults</code></td><td align="center">永久链接中各部分的默认值</td><td align="center"></td></tr><tr><td align="center">pretty_urls</td><td align="center">改写 <a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td><td align="center"></td></tr><tr><td align="center">pretty_urls.trailing_index</td><td align="center">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="center">true</td></tr><tr><td align="center">pretty_urls.trailing_html</td><td align="center">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td><td align="center">true</td></tr></tbody></table><blockquote><p><strong>网站存放在子目录</strong></p><p>如果您的网站存放在子目录中，例如 <code>http://example.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://example.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p></blockquote><p>在这里，你需要把url改成你的网站域名。</p><p>permalink，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫temp.md，那么这个时候他自动生成的地址就是<a href="http://yoursite.xxx/2022/04/02/temp%E3%80%82%E5%85%B3%E4%BA%8E%E9%93%BE%E6%8E%A5%E7%9A%84%E5%8F%98%E9%87%8F%E8%BF%98%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E9%9C%80%E8%A6%81%E7%9A%84%E5%8F%AF%E4%BB%A5%E5%8E%BB%E5%AE%98%E7%BD%91%E4%B8%8A%E6%9F%A5%E6%89%BE">http://yoursite.xxx/2022/04/02/temp。关于链接的变量还有很多，需要的可以去官网上查找</a> <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">branch</span>]</span><br></pre></td></tr></table></figure><p><code>theme</code>就是选择什么主题，也就是在<code>theme</code>这个文件夹下，在官网上有很多个主题，默认给你安装的是<code>lanscape</code>这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在<code>theme</code>文件夹下，再修改这个参数就可以了。</p><p>接下来这个<code>deploy</code>就是网站的部署的，<code>repo</code>就是仓库(Repository)的简写。<code>branch</code>选择仓库的哪个分支。这个在之前进行<code>github page</code>部署的时候已经修改过了，不再赘述。</p><h4 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h4><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局</p><h4 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h4><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h4><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><h4 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h4><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure><p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td></tr><tr><td align="left"><code>date</code></td><td align="left">文件建立日期</td></tr></tbody></table><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p><code>Front-matter</code> 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line"><span class="section">date: 2013/7/13 20:46:25</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td></tr><tr><td><code>title</code></td><td>标题</td></tr><tr><td><code>date</code></td><td>建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> Diary</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> PS3</span><br><span class="line"><span class="bullet">-</span> Games</span><br></pre></td></tr></table></figure><h4 id="page"><a href="#page" class="headerlink" title="page"></a>page</h4><p>如果你想另起一页，那么可以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page board</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<code>http://xxx.xxx/board</code></p><h4 id="draft"><a href="#draft" class="headerlink" title="draft"></a>draft</h4><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure><p>这样会在source&#x2F;_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure><p>就会自动把newpage.md发送到post中</p><h3 id="设置Hexo主题"><a href="#设置Hexo主题" class="headerlink" title="设置Hexo主题"></a>设置Hexo主题</h3><p>如果你觉得默认的<code>landscape</code>主题不好看，那么可以在<a href="https://hexo.io/themes/"><code>官网主题</code></a>中，选择你喜欢的一个主题进行修改。</p><p>直接在github链接上下载下来，然后放到<code>theme</code>文件夹下即可，修改配置文件 <code>_config.yml</code>中把<code>theme</code>换成那个主题文件夹的名字，它就会自动在<code>theme</code>文件夹中搜索你配置的主题，其他主题配置参照对应主题的配置即可。</p><h3 id="多终端发布博客"><a href="#多终端发布博客" class="headerlink" title="多终端发布博客"></a>多终端发布博客</h3><p>问题：假如你现在在自己的笔记本上写的博客，部署在了网站上，那么你在家里用台式机，或者搬公司的台式机，发现你电脑里面没有博客的文件，或者要换电脑了，最后不知道怎么移动文件，怎么办？</p><p>解决：利用git的分支系统进行多终端工作了，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝衔接操作。</p><h4 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h4><p>机制是这样的，由于<code>hexo d</code>上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。也就是上传的是在本地目录里自动生成的<code>.deploy_git</code>里面，其他文件 ，包括我们写在source 里面的，和配置文件，主题文件，都没有上传到github。</p><p>所以可以利用git的分支管理，将源文件上传到github的另一个分支即可。</p><h4 id="上传分支"><a href="#上传分支" class="headerlink" title="上传分支"></a>上传分支</h4><p>首先，先在github上新建一个hexo分支，然后在这个仓库的settings中，选择默认分支为hexo分支（这样每次同步的时候就不用指定分支，比较方便）然后在本地的任意目录下，打开git bash，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:ZJUFangzh/yourusername.github.io.git</span><br></pre></td></tr></table></figure><p>克隆到本地，再将本地的yourusername.github.io中，除了.git 文件夹外的所有文件都删掉。将博客源文件全部复制过来，除了.deploy_git。复制过来的源文件应该有一个.gitignore，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><p>如有其它<code>.git</code>文件夹记得删除，包括<code>theme</code>中的主题文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m &quot;add branch&quot;</span><br><span class="line">git push </span><br></pre></td></tr></table></figure><p>这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中<code>node_modules</code>、<code>public</code>、<code>db.json</code>已经被忽略掉了，将在其它电脑上重新输入命令安装构建产生 。</p><h4 id="更换电脑操作"><a href="#更换电脑操作" class="headerlink" title="更换电脑操作"></a>更换电脑操作</h4><p>跟上面环境搭建一致，安装hexo时不用再初始化，直接在文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git clone git@xxxxx</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 然后进入克隆到的文件夹</span></span></span><br><span class="line">cd xxx.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 生成，部署</span></span></span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 就可以开始写你的新博客了</span></span></span><br><span class="line">hexo new newpage</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 每次写完最好都把源文件上传一下</span></span></span><br><span class="line">git add .</span><br><span class="line">git commit –m &quot;xxxx&quot;</span><br><span class="line">git push </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 如果是在已经编辑过的电脑上，已经有clone文件夹了，那么，每次只要和远端同步一下就行了</span></span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hexo简介&quot;&gt;&lt;a href=&quot;#Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介&quot;&gt;&lt;/a&gt;Hexo简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt; 是一个快速、简洁且高效的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://www.zhangjm.top/2022/04/01/My-New-Post/"/>
    <id>http://www.zhangjm.top/2022/04/01/My-New-Post/</id>
    <published>2022-04-01T07:05:33.000Z</published>
    <updated>2022-04-01T07:05:33.164Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.zhangjm.top/2022/03/31/hello-world/"/>
    <id>http://www.zhangjm.top/2022/03/31/hello-world/</id>
    <published>2022-03-31T09:53:36.041Z</published>
    <updated>2022-03-31T09:53:36.041Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
